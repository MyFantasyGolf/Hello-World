{"version":3,"sources":["../../../src/db/resultsApi.js"],"names":["isNil","require","conn","moment","saveTourSchedule","schedule","startDate","date","start","db","coll","collection","findOneAndUpdate","year","title","key","toLowerCase","replace","upsert","err","console","log","stack","getSchedules","season","find","toArray","results","saveResults","forEach","result","$set","module","exports"],"mappings":";;;;;;AAAA,IAAMA,QAAQC,QAAQ,cAAR,CAAd;AACA,IAAMC,OAAOD,QAAQ,cAAR,CAAb;AACA,IAAME,SAASF,QAAQ,QAAR,CAAf;;AAEA,IAAMG;AAAA,qEAAmB,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBC,qBADiB,GACLH,OAAOE,SAASE,IAAT,CAAcC,KAArB,EAA4B,YAA5B,CADK;AAAA;AAAA,mBAGNN,KAAKO,EAHC;;AAAA;AAGjBA,cAHiB;AAIjBC,gBAJiB,GAIVD,GAAGE,UAAH,CAAc,WAAd,CAJU;;;AAMvB,gBAAI;AACFD,mBAAKE,gBAAL,CACE,EAAEC,MAAMR,SAASQ,IAAjB,EAAuBC,OAAOT,SAASS,KAAvC,EADF,EAEE,EAAE,GAAGT,QAAL,EAAeU,KAAKV,SAASS,KAAT,CAAeE,WAAf,GAA6BC,OAA7B,CAAqC,IAArC,EAA2C,EAA3C,CAApB,EAFF,EAGE,EAAEC,QAAQ,IAAV,EAHF;AAKD,aAND,CAOA,OAAMC,GAAN,EAAW;AACTC,sBAAQC,GAAR,CAAYF,IAAIG,KAAhB;AACD;;AAfsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAkBA,IAAMC;AAAA,sEAAe,kBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACFtB,KAAKO,EADH;;AAAA;AACbA,cADa;AAEbC,gBAFa,GAEND,GAAGE,UAAH,CAAc,WAAd,CAFM;AAAA;AAAA,mBAGGD,KAAKe,IAAL,CAAU,EAACZ,MAAMW,MAAP,EAAV,EAA0BE,OAA1B,EAHH;;AAAA;AAGbC,mBAHa;AAAA,8CAKZA,OALY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAQA,IAAMC;AAAA,sEAAc,kBAAOvB,QAAP,EAAiBsB,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACDzB,KAAKO,EADJ;;AAAA;AACZA,cADY;AAEZC,gBAFY,GAELD,GAAGE,UAAH,CAAc,WAAd,CAFK;;;AAIlB,gBAAI;AACFgB,sBAAQE,OAAR,CAAiB,UAACC,MAAD,EAAY;;AAE3BpB,qBAAKE,gBAAL,CACE,EAAEC,MAAMR,SAASQ,IAAjB,EAAuBE,KAAKV,SAASU,GAArC,EADF,EAEE,EAAEgB,uCAAoBD,OAAOf,GAA3B,EAAmC,EAAE,GAAGe,MAAL,EAAnC,CAAF,EAFF,EAGE,EAAEZ,QAAQ,IAAV,EAHF;AAKD,eAPD;AAQD,aATD,CAUA,OAAMC,GAAN,EAAW;AACTC,sBAAQC,GAAR,CAAYF,IAAIG,KAAhB;AACD;;AAhBiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAmBAU,OAAOC,OAAP,GAAiB;AACf7B,oCADe;AAEfmB,4BAFe;AAGfK;AAHe,CAAjB","file":"resultsApi.js","sourcesContent":["const isNil = require('lodash/isNil');\nconst conn = require('./connection');\nconst moment = require('moment');\n\nconst saveTourSchedule = async (schedule) => {\n  const startDate = moment(schedule.date.start, 'MM/DD/YYYY');\n\n  const db = await conn.db;\n  const coll = db.collection('schedules');\n\n  try {\n    coll.findOneAndUpdate(\n      { year: schedule.year, title: schedule.title },\n      { ...schedule, key: schedule.title.toLowerCase().replace(/ /g, '') },\n      { upsert: true }\n    );\n  }\n  catch(err) {\n    console.log(err.stack);\n  }\n};\n\nconst getSchedules = async (season) => {\n  const db = await conn.db;\n  const coll = db.collection('schedules');\n  const results = await coll.find({year: season}).toArray();\n\n  return results;\n};\n\nconst saveResults = async (schedule, results) => {\n  const db = await conn.db;\n  const coll = db.collection('schedules');\n\n  try {\n    results.forEach( (result) => {\n\n      coll.findOneAndUpdate(\n        { year: schedule.year, key: schedule.key },\n        { $set: { [`results.${result.key}`]: { ...result } }},\n        { upsert: true }\n      );\n    });\n  }\n  catch(err) {\n    console.log(err.stack);\n  }\n};\n\nmodule.exports = {\n  saveTourSchedule,\n  getSchedules,\n  saveResults\n};\n"]}