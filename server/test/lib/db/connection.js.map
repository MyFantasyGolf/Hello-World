{"version":3,"sources":["../../../src/db/connection.js"],"names":["MongoClient","require","assert","isUndefined","connection","DBConnection","console","log","client","close","Promise","resolve","reject","_db","connect","err","_client","db","process","on","module","exports"],"mappings":";;;;;;AAAA,IAAMA,cAAcC,QAAQ,SAAR,EAAmBD,WAAvC;AACA,IAAME,SAASD,QAAQ,QAAR,CAAf;AACA,IAAME,cAAcF,QAAQ,oBAAR,CAApB;;AAEA,IAAIG,mBAAJ;;IAEMC,Y;AACJ,0BAAc;AAAA;;AACZ,QAAIF,YAAYC,UAAZ,CAAJ,EAA6B;AAC3BA,mBAAa,IAAb;AACD;;AAED,WAAOA,UAAP;AACD;;;;4BAyBO;AACNE,cAAQC,GAAR,CAAY,eAAZ;;AAEA,UAAI,CAACJ,YAAY,KAAKK,MAAjB,CAAL,EAA+B;AAC7B,aAAKA,MAAL,CAAYC,KAAZ;AACD;AACF;;;wBA7BQ;AAAA;;AACP,aAAO,IAAIC,OAAJ,CAAa,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvC,YAAIT,YAAY,MAAKU,GAAjB,CAAJ,EAA2B;AACzBb,sBAAYc,OAAZ,CAAoB,2BAApB,EAAiD,UAACC,GAAD,EAAMP,MAAN,EAAiB;AAChE,kBAAKQ,OAAL,GAAeR,MAAf;AACA,kBAAKK,GAAL,GAAWT,WAAWI,MAAX,CAAkBS,EAAlB,CAAqB,eAArB,CAAX;AACAN,oBAAQ,MAAKE,GAAb;AACD,WAJD;AAKD,SAND,MAOK;AACHF,kBAAQ,MAAKE,GAAb;AACD;AACF,OAXM,CAAP;AAYD,K;sBAEMI,E,EAAI;AACT,WAAKJ,GAAL,GAAWI,EAAX;AACD;;;wBAEY;AACX,aAAO,KAAKD,OAAZ;AACD;;;;;;AAWH,IAAMC,KAAK,IAAIZ,YAAJ,EAAX;AACAC,QAAQC,GAAR,CAAY,YAAZ;;AAEAW,QAAQC,EAAR,CAAW,MAAX,EAAmB,YAAM;AACvBF,KAAGR,KAAH;AACD,CAFD;;AAIAW,OAAOC,OAAP,GAAiBJ,EAAjB","file":"connection.js","sourcesContent":["const MongoClient = require('mongodb').MongoClient;\nconst assert = require('assert');\nconst isUndefined = require('lodash/isUndefined');\n\nlet connection;\n\nclass DBConnection {\n  constructor() {\n    if (isUndefined(connection)) {\n      connection = this;\n    }\n\n    return connection;\n  }\n\n  get db() {\n    return new Promise( (resolve, reject) => {\n      if (isUndefined(this._db)) {\n        MongoClient.connect('mongodb://localhost:27017', (err, client) => {\n          this._client = client;\n          this._db = connection.client.db('myfantasygolf');\n          resolve(this._db);\n        });\n      }\n      else {\n        resolve(this._db);\n      }\n    });\n  }\n\n  set db(db) {\n    this._db = db;\n  }\n\n  get client() {\n    return this._client;\n  }\n\n  close() {\n    console.log('Closing DB...');\n\n    if (!isUndefined(this.client)) {\n      this.client.close();\n    }\n  }\n}\n\nconst db = new DBConnection();\nconsole.log('created db');\n\nprocess.on('exit', () => {\n  db.close();\n});\n\nmodule.exports = db;\n"]}