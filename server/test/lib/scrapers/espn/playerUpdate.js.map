{"version":3,"sources":["../../../../src/scrapers/espn/playerUpdate.js"],"names":["cheerio","require","fs","path","request","asyncRequest","moment","isNil","season","resultsApi","EspnPlayerUpdater","htmlFile","undefined","year","getSeason","getRoster","savedRoster","length","downloadPlayerList","readFileSync","html","roster","parseHtml","saveRoster","$","row","tds","name","text","split","origin","firstName","lastName","key","toLowerCase","load","oddrows","evenrows","oddPlayers","map","index","parsePlayer","get","evenPlayers","players","concat","module","exports"],"mappings":";;;;;;;;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,KAAKD,QAAQ,IAAR,CAAX;AACA,IAAME,OAAOF,QAAQ,MAAR,CAAb;AACA,IAAMG,UAAUH,QAAQ,SAAR,CAAhB;AACA,IAAMI,eAAeJ,QAAQ,iBAAR,CAArB;AACA,IAAMK,SAASL,QAAQ,QAAR,CAAf;AACA,IAAMM,QAAQN,QAAQ,cAAR,CAAd;;AAGA,IAAMO,SAASP,QAAQ,oBAAR,CAAf;AACA,IAAMQ,aAAaR,QAAQ,qBAAR,CAAnB;;IAEMS,iB;;;;;;;;;YAEgBC,Q,uEAAWC,S;;;;;;AACvBC,oB,GAAOL,OAAOM,SAAP,CAAiBR,QAAjB,C;;uBAEaG,WAAWM,SAAX,CAAqBF,IAArB,C;;;AAApBG,2B;;sBAEF,CAACT,MAAMS,WAAN,CAAD,IAAuBA,YAAYC,MAAZ,GAAqB,C;;;;;;;;;uBAI7BV,MAAMI,QAAN,C;;;;;;;;8BACjB,KAAKO,kBAAL,E;;;;;8BACAhB,GAAGiB,YAAH,CAAgBR,QAAhB,C;;;AAFIS,oB;AAIAC,sB,GAAS,KAAKC,SAAL,CAAeF,IAAf,C;;AACfC,uBAAOR,IAAP,GAAcA,IAAd;;AAEAJ,2BAAWc,UAAX,CAAsBV,IAAtB,EAA4BQ,MAA5B;;iDAEOA,M;;;;;;;;;;;;;;;;;;;;;;;;;uBAIMhB,aAAa,kCAAb,C;;;;;;;;;;;;;;;;;;;;;gCAGHmB,C,EAAGC,G,EAAK;AAClB,UAAMC,MAAMF,EAAE,IAAF,EAAQ,EAAR,EAAYC,GAAZ,CAAZ;AACA,UAAME,OAAOH,EAAE,GAAF,EAAO,EAAP,EAAWE,IAAI,CAAJ,CAAX,EAAmBE,IAAnB,GAA0BC,KAA1B,CAAgC,IAAhC,CAAb;AACA,UAAMC,SAASN,EAAEE,IAAI,CAAJ,CAAF,EAAUE,IAAV,EAAf;;AAEA,UAAMG,YAAYJ,KAAK,CAAL,CAAlB;AACA,UAAMK,WAAWL,KAAK,CAAL,CAAjB;AACA,UAAMM,MAASF,UAAUG,WAAV,EAAT,SAAoCF,SAASE,WAAT,EAA1C;;AAEA,aAAO;AACLD,gBADK;AAELF,4BAFK;AAGLC;AAHK,OAAP;AAKD;;;8BAESZ,I,EAAM;AAAA;;AACd,UAAMI,IAAIxB,QAAQmC,IAAR,CAAaf,IAAb,CAAV;;AAEA,UAAMgB,UAAUZ,EAAE,WAAF,CAAhB;AACA,UAAMa,WAAWb,EAAE,YAAF,CAAjB;;AAEA,UAAMc,aAAaF,QAAQG,GAAR,CAAa,UAACC,KAAD,EAAQf,GAAR,EAAgB;AAC9C,eAAO,MAAKgB,WAAL,CAAiBjB,CAAjB,EAAoBC,GAApB,CAAP;AACD,OAFkB,EAEhBiB,GAFgB,EAAnB;AAGA,UAAMC,cAAcN,SAASE,GAAT,CAAc,UAACC,KAAD,EAAQf,GAAR,EAAgB;AAChD,eAAO,MAAKgB,WAAL,CAAiBjB,CAAjB,EAAoBC,GAApB,CAAP;AACD,OAFmB,EAEjBiB,GAFiB,EAApB;;AAIA,UAAME,UAAUN,WAAWO,MAAX,CAAkBF,WAAlB,CAAhB;;AAEA,aAAO;AACLC;AADK,OAAP;AAGD;;;;;;AAGHE,OAAOC,OAAP,GAAiB;AACfrC;AADe,CAAjB","file":"playerUpdate.js","sourcesContent":["const cheerio = require('cheerio');\nconst fs = require('fs');\nconst path = require('path');\nconst request = require('request');\nconst asyncRequest = require('request-promise');\nconst moment = require('moment');\nconst isNil = require('lodash/isNil');\n\n\nconst season = require('../../utils/season');\nconst resultsApi = require('../../db/resultsApi');\n\nclass EspnPlayerUpdater {\n\n  async updatePlayers(htmlFile = undefined) {\n    const year = season.getSeason(moment());\n\n    const savedRoster = await resultsApi.getRoster(year);\n\n    if (!isNil(savedRoster) && savedRoster.length > 0){\n      return;\n    }\n\n    const html = await isNil(htmlFile) ?\n      this.downloadPlayerList() :\n      fs.readFileSync(htmlFile);\n\n    const roster = this.parseHtml(html);\n    roster.year = year;\n\n    resultsApi.saveRoster(year, roster);\n\n    return roster;\n  }\n\n  async downloadPlayerList() {\n    return await asyncRequest('http://www.espn.com/golf/players');\n  }\n\n  parsePlayer($, row) {\n    const tds = $('td', '', row);\n    const name = $('a', '', tds[0]).text().split(', ');\n    const origin = $(tds[1]).text();\n\n    const firstName = name[1];\n    const lastName = name[0];\n    const key = `${firstName.toLowerCase()}+${lastName.toLowerCase()}`;\n\n    return {\n      key,\n      firstName,\n      lastName\n    };\n  }\n\n  parseHtml(html) {\n    const $ = cheerio.load(html);\n\n    const oddrows = $('tr.oddrow');\n    const evenrows = $('tr.evenrow');\n\n    const oddPlayers = oddrows.map( (index, row) => {\n      return this.parsePlayer($, row);\n    }).get();\n    const evenPlayers = evenrows.map( (index, row) => {\n      return this.parsePlayer($, row);\n    }).get();\n\n    const players = oddPlayers.concat(evenPlayers);\n\n    return {\n      players\n    };\n  }\n}\n\nmodule.exports = {\n  EspnPlayerUpdater\n};\n"]}