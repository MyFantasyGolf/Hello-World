{"version":3,"sources":["../../src/app.js"],"names":["path","require","express","espn","fs","bodyParser","session","user_service","app","use","urlencoded","extended","json","secret","resave","saveUninitialized","get","request","response","updater","EspnUpdater","update","resolve","__dirname","file","updateResults","send","data","readFileSync","toString","playerResults","scrapeScheduleResults","post","registerUser","login","listen","console","log"],"mappings":";;;;AAAA,IAAMA,OAAOC,QAAQ,MAAR,CAAb;AACA,IAAMC,UAAUD,QAAQ,SAAR,CAAhB;AACA,IAAME,OAAOF,QAAQ,wBAAR,CAAb;AACA,IAAMG,KAAKH,QAAQ,IAAR,CAAX;AACA,IAAMI,aAAaJ,QAAQ,aAAR,CAAnB;AACA,IAAMK,UAAUL,QAAQ,iBAAR,CAAhB;;AAEA,IAAMM,eAAeN,QAAQ,2BAAR,CAArB;;AAEA,IAAMO,MAAMN,SAAZ;;AAEA;AACAM,IAAIC,GAAJ,CAAQJ,WAAWK,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;;AAEA;AACAH,IAAIC,GAAJ,CAAQJ,WAAWO,IAAX,EAAR;;AAEAJ,IAAIC,GAAJ,CAAQH,QAAQ;AACdO,UAAQ,mBADM;AAEdC,UAAQ,IAFM;AAGdC,qBAAmB;AAHL,CAAR,CAAR;;AAMAP,IAAIQ,GAAJ,CAAQ,SAAR;AAAA,qEAAmB,iBAAOC,OAAP,EAAgBC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEjB;AACMC,mBAHW,GAGD,IAAIhB,KAAKiB,WAAT,EAHC;AAAA;AAAA,mBAKXD,QAAQE,MAAR,CAAerB,KAAKsB,OAAL,CAAaC,SAAb,EAAwB,IAAxB,EAA8B,MAA9B,EAAsC,OAAtC,EAA+C,oBAA/C,CAAf,CALW;;AAAA;;AAOjB;AACMC,gBARW,GAQJxB,KAAKsB,OAAL,CAAaC,SAAb,EAAwB,IAAxB,EAA8B,MAA9B,EAAsC,OAAtC,EAA+C,cAA/C,CARI;AAAA;AAAA,mBASXJ,QAAQM,aAAR,CAAsBD,IAAtB,CATW;;AAAA;;AAWjBN,qBAASQ,IAAT;;AAXiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAAA;AAAA;AAAA;AAAA;;AAcAlB,IAAIQ,GAAJ,CAAQ,gBAAR;AAAA,sEAA0B,kBAAOC,OAAP,EAAgBC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBC,mBADkB,GACR,IAAIhB,KAAKiB,WAAT,EADQ;AAAA;AAAA,mBAGlBD,QAAQM,aAAR,EAHkB;;AAAA;AAIxBP,qBAASQ,IAAT;;AAJwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;;AAOAlB,IAAIQ,GAAJ,CAAQ,cAAR,EAAwB,UAACC,OAAD,EAAUC,QAAV,EAAuB;AAC7C,MAAMM,OAAOxB,KAAKsB,OAAL,CAAaC,SAAb,EAAwB,IAAxB,EAA8B,MAA9B,EAAsC,OAAtC,EAA+C,eAA/C,CAAb;AACA,MAAMI,OAAOvB,GAAGwB,YAAH,CAAgBJ,IAAhB,EAAsBK,QAAtB,EAAb;AACA,MAAMC,gBAAgB3B,KAAK4B,qBAAL,CAA2BJ,IAA3B,CAAtB;AACAT,WAASQ,IAAT,CAAcI,aAAd;AACD,CALD;;AAOAtB,IAAIwB,IAAJ,CAAS,WAAT,EAAsBzB,aAAa0B,YAAnC;AACAzB,IAAIwB,IAAJ,CAAS,QAAT,EAAmBzB,aAAa2B,KAAhC;;AAEA1B,IAAI2B,MAAJ,CAAW,IAAX,EAAiB;AAAA,SAAMC,QAAQC,GAAR,CAAY,2CAAZ,CAAN;AAAA,CAAjB","file":"app.js","sourcesContent":["const path = require('path');\nconst express = require('express');\nconst espn = require('./scrapers/espn/update');\nconst fs = require('fs');\nconst bodyParser = require('body-parser');\nconst session = require('express-session');\n\nconst user_service = require('./services/userManagement');\n\nconst app = express();\n\n// parse application/x-www-form-urlencoded\napp.use(bodyParser.urlencoded({ extended: false }));\n\n// parse application/json\napp.use(bodyParser.json());\n\napp.use(session({\n  secret: 'UniqueFantasyGolf',\n  resave: true,\n  saveUninitialized: false\n}));\n\napp.get('/update', async (request, response) => {\n\n  // try espn first\n  const updater = new espn.EspnUpdater();\n\n  await updater.update(path.resolve(__dirname, '..', 'test', 'files', 'espn-schedule.html'));\n\n  //now do the players\n  const file = path.resolve(__dirname, '..', 'test', 'files', 'results.html');\n  await updater.updateResults(file);\n\n  response.send();\n});\n\napp.get('/updateResults', async (request, response) => {\n  const updater = new espn.EspnUpdater();\n\n  await updater.updateResults();\n  response.send();\n});\n\napp.get('/scoreUpdate', (request, response) => {\n  const file = path.resolve(__dirname, '..', 'test', 'files', 'schedule.html');\n  const data = fs.readFileSync(file).toString();\n  const playerResults = espn.scrapeScheduleResults(data);\n  response.send(playerResults);\n});\n\napp.post('/register', user_service.registerUser);\napp.post('/login', user_service.login);\n\napp.listen(3000, () => console.log('MyFantasyGolf app listening on port 3000!'))\n"]}