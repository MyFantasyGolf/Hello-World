{"version":3,"sources":["../../server/src/db/rosterApi.js"],"names":["conn","require","ObjectId","season","moment","isNil","getActiveRosterMap","leagueId","userId","db","coll","collection","console","log","findOne","getSeason","map","myMap","teams","find","team","user","activeMap","setActiveRosterMap","findOneAndUpdate","_id","$set","getGolfer","key","year","project","$elemMatch","toArray","player","length","players","module","exports"],"mappings":";;;;;;;;;;;;AAAA,IAAMA,OAAOC,QAAQ,cAAR,CAAb;AACA,IAAMC,WAAWD,QAAQ,SAAR,EAAmBC,QAApC;AACA,IAAMC,SAASF,QAAQ,iBAAR,CAAf;AACA,IAAMG,SAASH,QAAQ,QAAR,CAAf;AACA,IAAMI,QAAQJ,QAAQ,cAAR,CAAd;;AAEA,IAAMK;AAAA,sFAAqB,iBAAOC,QAAP,EAAiBC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACRR,KAAKS,EADG;;AAAA;AACnBA,cADmB;AAEnBC,gBAFmB,GAEZD,GAAGE,UAAH,CAAc,SAAd,CAFY;;AAGzBC,oBAAQC,GAAR,gBAAyBN,QAAzB,aAAyCC,MAAzC;;AAHyB;AAAA,mBAKPE,KAAKI,OAAL,CAAa;AAC7B,qBAAOZ,SAASK,QAAT,CADsB;AAE7B,wBAAUJ,OAAOY,SAAP,CAAiBX,QAAjB;AAFmB,aAAb,EAGf;AACD,4BAAc,CADb;AAED,qCAAuB,CAFtB;AAGD,iCAAmB,CAHlB;AAID,iCAAmB;AAJlB,aAHe,CALO;;AAAA;AAKnBY,eALmB;AAenBC,iBAfmB,GAeXD,IAAIE,KAAJ,CAAUC,IAAV,CAAgB,UAACC,IAAD,EAAU;AACtC,qBAAOA,KAAKC,IAAL,KAAcb,MAArB;AACD,aAFa,CAfW;AAAA,6CAmBlBS,MAAMK,SAnBY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAsBA,IAAMC;AAAA,uFAAqB,kBAAOhB,QAAP,EAAiBC,MAAjB,EAAyBQ,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACRhB,KAAKS,EADG;;AAAA;AACnBA,cADmB;AAEnBC,gBAFmB,GAEZD,GAAGE,UAAH,CAAc,SAAd,CAFY;AAAA;AAAA,mBAInBD,KAAKc,gBAAL,CAAsB;AAC1BC,mBAAKvB,SAASK,QAAT,CADqB;AAE1B,4BAAcC;AAFY,aAAtB,EAGH;AACDkB,oBAAM,EAAE,qBAAqBV,GAAvB;AADL,aAHG,CAJmB;;AAAA;AAAA,8CAWlBA,GAXkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAcA,IAAMW;AAAA,uFAAY,kBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEC5B,KAAKS,EAFN;;AAAA;AAEVA,cAFU;AAGVC,gBAHU,GAGHD,GAAGE,UAAH,CAAc,SAAd,CAHG;AAIVkB,gBAJU,GAIH1B,OAAOY,SAAP,CAAiBX,QAAjB,CAJG;AAAA;AAAA,mBAMKM,KAAKS,IAAL,CACnB,EAAC,QAAQU,IAAT,EADmB,EAElBC,OAFkB,CAEV;AACP,yBAAW;AACTC,4BAAY,EAAC,OAAOH,GAAR;AADH;AADJ,aAFU,EAMhBI,OANgB,EANL;;AAAA;AAMVC,kBANU;;AAAA,kBAcZ5B,MAAM4B,MAAN,KAAiBA,OAAOC,MAAP,GAAgB,CAdrB;AAAA;AAAA;AAAA;;AAAA,8CAeP,IAfO;;AAAA;AAAA,8CAkBTD,OAAO,CAAP,EAAUE,OAAV,CAAkB,CAAlB,CAlBS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAZ;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAqBAC,OAAOC,OAAP,GAAiB;AACf/B,wCADe;AAEfqB,sBAFe;AAGfJ;AAHe,CAAjB","file":"rosterApi.js","sourcesContent":["const conn = require('./connection');\nconst ObjectId = require('mongodb').ObjectId;\nconst season = require('../utils/season');\nconst moment = require('moment');\nconst isNil = require('lodash/isNil');\n\nconst getActiveRosterMap = async (leagueId, userId) => {\n  const db = await conn.db;\n  const coll = db.collection('leagues');\n  console.log(`here with ${leagueId} and ${userId}`);\n\n  const map = await coll.findOne({\n    '_id': ObjectId(leagueId),\n    'season': season.getSeason(moment())\n  }, {\n    'teams.user': 1,\n    'teams.currentRoster': 1,\n    'teams.activeMap': 1,\n    'teams.draftList': 0\n  });\n\n  const myMap = map.teams.find( (team) => {\n    return team.user === userId;\n  });\n\n  return myMap.activeMap;\n};\n\nconst setActiveRosterMap = async (leagueId, userId, map) => {\n  const db = await conn.db;\n  const coll = db.collection('leagues');\n\n  await coll.findOneAndUpdate({\n    _id: ObjectId(leagueId),\n    'teams.user': userId\n  }, {\n    $set: { 'teams.$.activeMap': map }\n  });\n\n  return map;\n};\n\nconst getGolfer = async (key) => {\n\n  const db = await conn.db;\n  const coll = db.collection('players');\n  const year = season.getSeason(moment());\n\n  const player = await coll.find(\n    {'year': year})\n    .project({\n      'players': {\n        $elemMatch: {'key': key}\n      }\n    }).toArray();\n\n  if (isNil(player) || player.length < 1) {\n    return null;\n  }\n\n  return player[0].players[0];\n};\n\nmodule.exports = {\n  getActiveRosterMap,\n  getGolfer,\n  setActiveRosterMap\n};\n"]}