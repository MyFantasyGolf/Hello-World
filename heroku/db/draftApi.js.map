{"version":3,"sources":["../../server/src/db/draftApi.js"],"names":["conn","require","season","moment","isNil","shuffle","ObjectId","Cache","leagueApi","draftCache","defaultTtl","getDraft","leagueId","db","coll","collection","find","getSeason","projection","draft","toArray","console","log","updateDraft","findOneAndUpdate","$set","legaueId","getDraftList","userId","project","teams","$elemMatch","list","getAvailablePlayers","availablePlayers","filteredList","draftList","filter","player","index","findIndex","ap","key","updateDraftList","update","buildRounds","draftOptions","rounds","i","numberOfRounds","order","draftOrderType","draftOrder","reverse","picks","map","team","user","pick","push","startDraft","settings","state","draftStatus","force","myDraftStatus","get","roundIndex","round","hasEmptyPick","completed","format","remove","whosUpIndex","newStatus","currentPick","put","makePick","selection","getLeague","league","teamIndex","currentRoster","saveLeague","currentStatus","module","exports"],"mappings":"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","file":"draftApi.js","sourcesContent":["const conn = require('./connection');\nconst season = require('../utils/season');\nconst moment = require('moment');\nconst isNil = require('lodash/isNil');\nconst shuffle = require('lodash/shuffle');\nconst ObjectId = require('mongodb').ObjectId;\nconst Cache = require('timed-cache');\n\nconst leagueApi = require('./leagueApi');\n\nconst draftCache = new Cache({ defaultTtl: 10 * 60 * 1000 });\n\nconst getDraft = async (leagueId) => {\n  const db = await conn.db;\n  const coll = db.collection('leagues');\n\n  try {\n    const draft = await coll.find({\n      '_id': ObjectId(leagueId),\n      'season': season.getSeason(moment())\n    }, {\n      projection: {draft: 1}\n    }).toArray();\n\n    return draft[0].draft;\n  }\n  catch(err) {\n    console.log(`Error get the draft for ${leagueId}: ${err}`);\n  }\n};\n\nconst updateDraft = async (leagueId, draft) => {\n  const db = await conn.db;\n  const coll = db.collection('leagues');\n\n  try {\n    await coll.findOneAndUpdate({\n      '_id': ObjectId(leagueId),\n      'season': season.getSeason(moment())\n    },\n    { $set: {'draft': draft }});\n  }\n  catch(err) {\n    console.log(`Error saving draft for league ${legaueId}`);\n  }\n}\n\nconst getDraftList = async (leagueId, userId) => {\n  const db = await conn.db;\n  const coll = db.collection('leagues');\n\n  try {\n    const list = await coll.find({\n      '_id': ObjectId(leagueId),\n      'season': season.getSeason(moment())\n    })\n    .project({\n      teams: { $elemMatch: {\"user\": userId}}\n    }).toArray();\n\n    const availablePlayers = await leagueApi.getAvailablePlayers(leagueId);\n\n    const filteredList = list[0].teams[0].draftList.filter( (player) => {\n      const index = availablePlayers.findIndex( (ap) => {\n        return ap.key === player.key;\n      });\n\n      return index !== -1;\n    });\n\n    return filteredList;\n  }\n  catch(err) {\n    console.log(`Error getting draft list for ${userId}: ${err}`);\n  }\n\n  return [];\n};\n\nconst updateDraftList = async (leagueId, userId, draftList) => {\n  const db = await conn.db;\n  const coll = db.collection('leagues');\n\n  await coll.update({\n    '_id': ObjectId(leagueId),\n    'season': season.getSeason(moment()),\n    'teams.user': userId\n  }, {\n    '$set': {\n      'teams.$.draftList': draftList\n    }\n  });\n};\n\nconst buildRounds = (draftOptions) => {\n\n  const rounds = [];\n\n  for (let i = 0; i < draftOptions.numberOfRounds; i++) {\n    let order = [];\n\n    if (draftOptions.draftOrderType === 'normal') {\n      order = draftOptions.draftOrder;\n    }\n    else if (draftOptions.draftOrderType === 'serpentine') {\n      if (i !== 0) {\n        draftOptions.draftOrder.reverse();\n      }\n\n      order = draftOptions.draftOrder;\n    }\n    else {\n      order = shuffle(draftOptions.draftOrder);\n    }\n\n    const picks = order.map( (team) => {\n      return {\n        team: team.user,\n        pick: null\n      };\n    });\n\n    rounds.push(picks);\n  }\n\n  return rounds;\n};\n\nconst startDraft = async (leagueId, draftOptions) => {\n  const db = await conn.db;\n  const coll = db.collection('leagues');\n\n  const rounds = buildRounds(draftOptions);\n\n  await coll.update({\n    '_id': ObjectId(leagueId),\n    'season': season.getSeason(moment())\n  },\n  { '$set':\n    {\n      draft: {\n        settings: draftOptions,\n        state: 'INPROGRESS',\n        rounds: rounds\n      }\n    }\n  });\n};\n\n\nconst draftStatus = async (leagueId, force = false) => {\n  // is it in Cache\n  const myDraftStatus = draftCache.get(leagueId);\n\n  if (!isNil(myDraftStatus) && force === false) {\n    return myDraftStatus;\n  }\n\n  const draft = await getDraft(leagueId);\n\n  if (isNil(draft) || draft.state === 'PREDRAFT' ||\n    draft.state === 'FINISHED') {\n    return { draft: draft };\n  }\n\n  const roundIndex = draft.rounds.findIndex( (round) => {\n    const hasEmptyPick = round.find( (pick) => {\n      return isNil(pick.pick);\n    });\n\n    return !isNil(hasEmptyPick);\n  });\n\n  // draft is over\n  if (roundIndex === -1) {\n    draft.state = 'FINISHED';\n    draft.completed = moment().format('MM-DD-YYYY');\n    draftCache.remove(leagueId);\n    await updateDraft(leagueId, draft);\n    return { draft: draft };\n  }\n\n  const whosUpIndex = draft.rounds[roundIndex].findIndex( (picks) => {\n    return isNil(picks.pick);\n  });\n\n  const newStatus = {\n    round: (roundIndex + 1),\n    pick: (whosUpIndex + 1),\n    currentPick: draft.rounds[roundIndex][whosUpIndex].team,\n    draft: draft\n  };\n\n  draftCache.put(leagueId, newStatus);\n  return newStatus;\n}\n\nconst makePick = async (leagueId, round, pick, selection) => {\n\n  const draft = await getDraft(leagueId);\n  draft.rounds[round][pick].pick = selection;\n\n  await updateDraft(leagueId, draft);\n\n  const league = await leagueApi.getLeague(leagueId);\n\n  const teamIndex = league.teams.findIndex( (team) => {\n    return team.user === draft.rounds[round][pick].team;\n  });\n\n  league.teams[teamIndex].currentRoster.push(selection);\n\n  await leagueApi.saveLeague(league);\n\n  const currentStatus = await draftStatus(leagueId, true);\n  draftCache.put(leagueId, currentStatus);\n}\n\nmodule.exports = {\n  getDraftList,\n  getDraft,\n  updateDraftList,\n  startDraft,\n  makePick,\n  draftStatus\n};\n"]}