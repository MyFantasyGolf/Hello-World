{"version":3,"sources":["../../server/src/db/connection.js"],"names":["MongoClient","require","assert","isUndefined","isNil","connection","DBConnection","console","log","client","close","Promise","resolve","reject","_db","process","env","MFG_MONGO_URI","DB_URL","connect","useNewUrlParser","err","_client","db","on","module","exports"],"mappings":";;;;;;;;;;;;AAAA,IAAMA,cAAcC,QAAQ,SAAR,EAAmBD,WAAvC;AACA,IAAME,SAASD,QAAQ,QAAR,CAAf;AACA,IAAME,cAAcF,QAAQ,oBAAR,CAApB;AACA,IAAMG,QAAQH,QAAQ,cAAR,CAAd;;AAEA,IAAII,mBAAJ;;IAEMC,Y;AACJ,0BAAc;AAAA;;AACZ,QAAIH,YAAYE,UAAZ,CAAJ,EAA6B;AAC3BA,mBAAa,IAAb;AACD;;AAED,WAAOA,UAAP;AACD;;;;4BA6BO;AACNE,cAAQC,GAAR,CAAY,eAAZ;;AAEA,UAAI,CAACL,YAAY,KAAKM,MAAjB,CAAL,EAA+B;AAC7B,aAAKA,MAAL,CAAYC,KAAZ;AACD;AACF;;;wBAjCQ;AAAA;;AACP,aAAO,IAAIC,OAAJ,CAAa,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvC,YAAIV,YAAY,MAAKW,GAAjB,CAAJ,EAA2B;AACzBP,kBAAQC,GAAR,CAAYO,QAAQC,GAAR,CAAYC,aAAxB;AACA,cAAMC,SAASd,MAAMW,QAAQC,GAAR,CAAYC,aAAlB,IACb,2BADa,GAEbF,QAAQC,GAAR,CAAYC,aAFd;AAGAjB,sBAAYmB,OAAZ,CAAoBD,MAApB,EAA4B,EAAEE,iBAAiB,IAAnB,EAA5B,EAAuD,UAACC,GAAD,EAAMZ,MAAN,EAAiB;AACtE,kBAAKa,OAAL,GAAeb,MAAf;AACA,kBAAKK,GAAL,GAAWT,WAAWI,MAAX,CAAkBc,EAAlB,CAAqB,eAArB,CAAX;AACAX,oBAAQ,MAAKE,GAAb;AACD,WAJD;AAKD,SAVD,MAWK;AACHF,kBAAQ,MAAKE,GAAb;AACD;AACF,OAfM,CAAP;AAgBD,K;sBAEMS,E,EAAI;AACT,WAAKT,GAAL,GAAWS,EAAX;AACD;;;wBAEY;AACX,aAAO,KAAKD,OAAZ;AACD;;;;;AAWH,IAAMC,KAAK,IAAIjB,YAAJ,EAAX;AACAC,QAAQC,GAAR,CAAY,YAAZ;;AAEAO,QAAQS,EAAR,CAAW,MAAX,EAAmB,YAAM;AACvBD,KAAGb,KAAH;AACD,CAFD;;AAIAe,OAAOC,OAAP,GAAiBH,EAAjB","file":"connection.js","sourcesContent":["const MongoClient = require('mongodb').MongoClient;\nconst assert = require('assert');\nconst isUndefined = require('lodash/isUndefined');\nconst isNil = require('lodash/isNil');\n\nlet connection;\n\nclass DBConnection {\n  constructor() {\n    if (isUndefined(connection)) {\n      connection = this;\n    }\n\n    return connection;\n  }\n\n  get db() {\n    return new Promise( (resolve, reject) => {\n      if (isUndefined(this._db)) {\n        console.log(process.env.MFG_MONGO_URI);\n        const DB_URL = isNil(process.env.MFG_MONGO_URI) ?\n          'mongodb://localhost:27017' :\n          process.env.MFG_MONGO_URI;\n        MongoClient.connect(DB_URL, { useNewUrlParser: true }, (err, client) => {\n          this._client = client;\n          this._db = connection.client.db('myfantasygolf');\n          resolve(this._db);\n        });\n      }\n      else {\n        resolve(this._db);\n      }\n    });\n  }\n\n  set db(db) {\n    this._db = db;\n  }\n\n  get client() {\n    return this._client;\n  }\n\n  close() {\n    console.log('Closing DB...');\n\n    if (!isUndefined(this.client)) {\n      this.client.close();\n    }\n  }\n}\n\nconst db = new DBConnection();\nconsole.log('created db');\n\nprocess.on('exit', () => {\n  db.close();\n});\n\nmodule.exports = db;\n"]}