{"version":3,"sources":["../../server/src/services/rosterManagement.js"],"names":["isNil","require","pgaService","draftApi","rosterApi","getActiveRoster","request","response","leagueId","params","userId","session","status","send","getActiveRosterMap","map","setActiveRoster","body","setActiveRosterMap","newMap","module","exports"],"mappings":";;;;;;;;;;;;AAAA,IAAMA,QAAQC,QAAQ,cAAR,CAAd;AACA,IAAMC,aAAaD,QAAQ,cAAR,CAAnB;AACA,IAAME,WAAWF,QAAQ,gBAAR,CAAjB;AACA,IAAMG,YAAYH,QAAQ,iBAAR,CAAlB;;AAEA,IAAMI;AAAA,sFAAkB,iBAAOC,OAAP,EAAgBC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEhBC,oBAFgB,GAELF,QAAQG,MAAR,CAAeD,QAFV;AAGhBE,kBAHgB,GAGPJ,QAAQK,OAAR,CAAgBD,MAHT;;AAAA,kBAKlBV,MAAMQ,QAAN,KAAmBR,MAAMU,MAAN,CALD;AAAA;AAAA;AAAA;;AAMpBH,qBAASK,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B,6CAA1B;AANoB;;AAAA;AAAA;AAAA,mBAUJT,UAAUU,kBAAV,CAA6BN,QAA7B,EAAuCE,MAAvC,CAVI;;AAAA;AAUhBK,eAVgB;;;AAYtBR,qBAASM,IAAT,CAAc,EAACE,QAAD,EAAd;;AAZsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAeA,IAAMC;AAAA,uFAAkB,kBAAOV,OAAP,EAAgBC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEhBC,oBAFgB,GAELF,QAAQG,MAAR,CAAeD,QAFV;AAGhBE,kBAHgB,GAGPJ,QAAQK,OAAR,CAAgBD,MAHT;AAIhBK,eAJgB,GAIVT,QAAQW,IAJE;;AAAA,kBAMlBjB,MAAMQ,QAAN,KAAmBR,MAAMU,MAAN,CAAnB,IAAoCV,MAAMe,GAAN,CANlB;AAAA;AAAA;AAAA;;AAOpBR,qBAASK,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B,8DAA1B;AAPoB;;AAAA;AAAA;AAAA,mBAWDT,UAAUc,kBAAV,CAA6BV,QAA7B,EAAuCE,MAAvC,EAA+CK,GAA/C,CAXC;;AAAA;AAWhBI,kBAXgB;;AAYtBZ,qBAASM,IAAT,CAAcM,MAAd;;AAZsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAeAC,OAAOC,OAAP,GAAiB;AACfhB,kCADe;AAEfW;AAFe,CAAjB","file":"rosterManagement.js","sourcesContent":["const isNil = require('lodash/isNil');\nconst pgaService = require('./pgaService');\nconst draftApi = require('../db/draftApi');\nconst rosterApi = require('../db/rosterApi');\n\nconst getActiveRoster = async (request, response) => {\n\n  const leagueId = request.params.leagueId;\n  const userId = request.session.userId;\n\n  if (isNil(leagueId) || isNil(userId)) {\n    response.status(500).send('League and User session must both be vaild.');\n    return;\n  }\n\n  const map = await rosterApi.getActiveRosterMap(leagueId, userId);\n\n  response.send({map});\n};\n\nconst setActiveRoster = async (request, response) => {\n\n  const leagueId = request.params.leagueId;\n  const userId = request.session.userId;\n  const map = request.body;\n\n  if (isNil(leagueId) || isNil(userId) || isNil(map)) {\n    response.status(500).send('League, active settings and User session must both be vaild.');\n    return;\n  }\n\n  const newMap = await rosterApi.setActiveRosterMap(leagueId, userId, map);\n  response.send(newMap);\n};\n\nmodule.exports = {\n  getActiveRoster,\n  setActiveRoster\n};\n"]}