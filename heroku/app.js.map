{"version":3,"sources":["../server/src/app.js"],"names":["path","require","express","espn","espnPlayers","fs","bodyParser","session","isNil","user_service","league_service","roster_service","pga_service","resultsApi","season","moment","leagueUpdater","app","updating","use","static","secret","resave","saveUninitialized","urlencoded","extended","json","request","response","next","startsWith","userId","console","log","update","EspnUpdater","updateResults","pup","EspnPlayerUpdater","updatePlayers","schedulesUpdated","getSeason","get","send","updater","getSchedule","post","registerUser","login","logout","getUser","getUsers","getGolfers","getGolfer","getMyLeagues","getLeague","createLeague","put","setActiveRoster","getActiveRoster","getLeagueSchedules","getAvailablePlayers","getDraftList","updateDraftList","startDraft","getDraft","getDraftStatus","makeDraftPick","getMyInvitations","acceptInvitation","delete","declineInvitation","sendFile","join","__dirname","listen"],"mappings":"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","file":"app.js","sourcesContent":["const path = require('path');\nconst express = require('express');\nconst espn = require('./scrapers/espn/update');\nconst espnPlayers = require('./scrapers/espn/playerUpdate');\nconst fs = require('fs');\nconst bodyParser = require('body-parser');\nconst session = require('express-session');\n\nconst isNil = require('lodash/isNil');\nconst user_service = require('./services/userManagement');\nconst league_service = require('./services/leagueManagement');\nconst roster_service = require('./services/rosterManagement');\nconst pga_service = require('./services/pgaService');\nconst resultsApi = require('./db/resultsApi');\nconst season = require('./utils/season');\nconst moment = require('moment');\n\nconst leagueUpdater = require('./db/leagueUpdater');\n\nconst app = express();\nlet updating = false;\n\napp.use(express.static('./public'));\n\napp.use(session({\n  secret: 'UniqueFantasyGolf',\n  resave: true,\n  saveUninitialized: false\n}));\n\n// parse application/x-www-form-urlencoded\napp.use(bodyParser.urlencoded({ extended: false }));\n\n// parse application/json\napp.use(bodyParser.json());\n\napp.use(async (request, response, next) => {\n  if (\n    !request.path.startsWith('/api') ||\n    isNil(request.session) ||\n    isNil(request.session.userId) ||\n    updating === true)\n  {\n    next();\n    return;\n  }\n\n  console.log('Updating...');\n  updating = true;\n  const update = new espn.EspnUpdater();\n  await update.update();\n  await update.updateResults();\n  const pup = new espnPlayers.EspnPlayerUpdater();\n  await pup.updatePlayers();\n  updating = false;\n\n  leagueUpdater.update(request.session.userId);\n  console.log('Done updating');\n\n  await resultsApi.schedulesUpdated(season.getSeason(moment()));\n\n  next();\n});\n\napp.get('/isUpdating', async (request, response) => {\n  response.send({ updating });\n});\n\napp.get('/update', async (request, response) => {\n\n  // try espn first\n  const updater = new espn.EspnUpdater();\n  //\n  // await updater.update(path.resolve(__dirname, '..', 'test', 'files', 'espn-schedule.html'));\n  //\n  // //now do the players\n  // const file = path.resolve(__dirname, '..', 'test', 'files', 'results.html');\n  // await updater.updateResults(file);\n  updater.update();\n\n  response.send();\n});\n\napp.get('/api/updateResults', async (request, response) => {\n  const updater = new espn.EspnUpdater();\n\n  await updater.updateResults();\n  console.log('Done.');\n  response.send();\n});\n\n// app.get('/api/scoreUpdate', (request, response) => {\n//   const file = path.resolve(__dirname, '..', 'test', 'files', 'schedule.html');\n//   const data = fs.readFileSync(file).toString();\n//   const playerResults = espn.scrapeScheduleResults(data);\n//   response.send(playerResults);\n// });\n\n// app.get('/api/updateRoster', async (request, response) => {\n//   const file = path.resolve(__dirname, '..', 'test', 'files', 'players.html');\n//   const pup = new espnPlayers.EspnPlayerUpdater();\n//   const players = await pup.updatePlayers(file);\n//   response.send(players);\n// });\n\napp.get('/api/schedule', pga_service.getSchedule);\n\napp.post('/api/register', user_service.registerUser);\napp.post('/api/login', user_service.login);\napp.post('/api/logout', user_service.logout);\napp.get('/api/currentUser', user_service.getUser);\napp.get('/api/users', user_service.getUsers);\n\n// players\napp.get('/api/golfers/:season', pga_service.getGolfers);\napp.get('/api/golfer/:key', pga_service.getGolfer);\n\n// leagues\napp.get('/api/myleagues', league_service.getMyLeagues);\n\napp.get('/api/league/:leagueId', league_service.getLeague);\napp.post('/api/league', league_service.createLeague);\napp.put('/api/league/:leagueId/setActiveRoster', roster_service.setActiveRoster);\napp.get('/api/league/:leagueId/myActiveRoster', roster_service.getActiveRoster);\napp.get('/api/league/:leagueId/schedules', league_service.getLeagueSchedules);\n\napp.get('/api/league/:leagueId/availablePlayers', league_service.getAvailablePlayers);\napp.get('/api/league/:leagueId/draftList', league_service.getDraftList);\napp.put('/api/league/:leagueId/draftList', league_service.updateDraftList);\n\napp.post('/api/league/:leagueId/draft', league_service.startDraft);\napp.get('/api/league/:leagueId/draft', league_service.getDraft);\napp.get('/api/league/:leagueId/draft/status', league_service.getDraftStatus);\napp.put('/api/league/:leagueId/draft/:round/:pick', league_service.makeDraftPick);\n\napp.get('/api/invites', league_service.getMyInvitations);\napp.put('/api/invite/accept/:leagueId/:teamName', league_service.acceptInvitation);\napp.delete('/api/invite/decline/:leagueId', league_service.declineInvitation);\n\napp.get('*', (request, response) => {\n  response.sendFile(path.join(__dirname+'/public/index.html'));\n})\n\napp.listen(3000, () => console.log('MyFantasyGolf app listening on port 3000!'))\n"]}